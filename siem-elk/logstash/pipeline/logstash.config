input {
  beats {
    port => 5044
  }
}
filter {
  if "ubuntu_syslog" in [tags] {
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:host} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:log_message}"
      }
    }

    # Etiquetar intentos de login fallido por usuario inválido
    if [log_message] =~ /Failed password for invalid user/ {
      mutate { add_tag => ["auth_failure_invalid_user"] }
    }

    # Etiquetar cierre de conexión por usuario inválido
    if [log_message] =~ /Connection closed by invalid user/ {
      mutate { add_tag => ["connection_closed_invalid_user"] }
    }

    # Etiquetar simplemente cierres de conexión sin identificar al usuario
    if [log_message] =~ /Connection closed by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/ {
      mutate { add_tag => ["connection_closed"] }
    }

    # Etiquetar usuarios inválidos detectados
    if [log_message] =~ /Invalid user/ {
      mutate { add_tag => ["invalid_user_detected"] }
    }

    # Etiquetar fallos de autenticación PAM (posibles ataques de diccionario)
    if [log_message] =~ /pam_unix.*authentication failure/ {
      mutate { add_tag => ["pam_auth_failure"] }
    }

    # Agrupar como posible escaneo si hay múltiples eventos de intentos fallidos
    if [log_message] =~ /message repeated \d+ times.*Failed password/ {
      mutate { add_tag => ["possible_bruteforce"] }
    }
    if [log_message] =~ /Connection closed by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} port \d+/ {
  mutate {
    add_tag => ["possible_port_scan"]
  }
}
    # Detección de posibles síntomas de DDoS
if [log_message] =~ /MaxStartups throttling/ or
       [log_message] =~ /drop connection .* past MaxStartups/ or
       [log_message] =~ /Too many authentication failures/ or
       [log_message] =~ /Connection closed by .* port \d+ \[preauth\]/ {
      mutate {
        add_tag => ["possible_ddos"]
      }
    }
  }
}
output {
  stdout { codec => rubydebug }

  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}